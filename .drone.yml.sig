eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CgogIGNsb25lOgogICAgaW1hZ2U6IHBsdWdpbnMvZ2l0OjEuMQogICAgdGFnczogdHJ1ZQogICAgc2tpcF92ZXJpZnk6IHRydWUKCiAgcHVibGlzaF9tYXN0ZXJfdG9fZG9ja2VyaHViOgogICAgaW1hZ2U6IHBsdWdpbnMvZG9ja2VyCiAgICByZXBvOiBwZ2F1dGhpZXIyL3B3Z2VuLXdzCiAgICB0YWdzOgogICAgICAtIGxhdGVzdAogICAgICAtICR7RFJPTkVfQ09NTUlUfQogICAgc2VjcmV0czogWyBkb2NrZXJfdXNlcm5hbWUsIGRvY2tlcl9wYXNzd29yZCBdCiAgICB3aGVuOgogICAgICBicmFuY2g6IG1hc3RlcgoKICBwdWJsaXNoX3RhZ190b19kb2NrZXJodWI6CiAgICBpbWFnZTogcGx1Z2lucy9kb2NrZXIKICAgIHJlcG86IHBnYXV0aGllcjIvcHdnZW4td3MKICAgIHRhZ3M6ICR7RFJPTkVfVEFHfQogICAgc2VjcmV0czogWyBkb2NrZXJfdXNlcm5hbWUsIGRvY2tlcl9wYXNzd29yZCBdCiAgICB3aGVuOgogICAgICBldmVudDogdGFnCgogIGRlcGxveV90b19rOHNfZGV2OgogICAgaW1hZ2U6IHBnYXV0aGllcjIvZHJvbmUtaGVsbTprMS45LjItaDIuNy4yCiAgICBza2lwX3Rsc192ZXJpZnk6IHRydWUKICAgIGNoYXJ0OiAuL2NoYXJ0cy9wd2dlbi13cwogICAgcmVsZWFzZTogcHdnZW4td3MKICAgIG5hbWVzcGFjZTogcHdnZW4td3MKICAgIHByZWZpeDogREVWCiAgICB2YWx1ZXM6CiAgICAgIC0gdGFnPSR7RFJPTkVfQ09NTUlUfQogICAgICAtIHN0YWdlPWRldgogICAgICAtIGluZ3Jlc3MuaG9zdG5hbWU9cHdnZW4td3MtZGV2LnN0aW5ncmF5LmNvbQogICAgICAtIGRvY2tlcmNmZz0kJHtET0NLRVJDRkd9CiAgICBzZWNyZXRzOiBbIERFVl9BUElfU0VSVkVSLCBERVZfS1VCRVJORVRFU19UT0tFTiwgREVWX0RPQ0tFUkNGRyBdCiAgICB1cGdyYWRlOiB0cnVlCiAgICB3YWl0OiB0cnVlCiAgICBkZWJ1ZzogdHJ1ZQogICAgd2hlbjoKICAgICAgZXZlbnQ6IHB1c2gKCiAgZGVwbG95X3RvX2s4c19zdGFnZToKICAgIGltYWdlOiBwZ2F1dGhpZXIyL2Ryb25lLWhlbG06azEuOS4yLWgyLjcuMgogICAgc2tpcF90bHNfdmVyaWZ5OiB0cnVlCiAgICBjaGFydDogLi9jaGFydHMvcHdnZW4td3MKICAgIHJlbGVhc2U6IHB3Z2VuLXdzCiAgICBuYW1lc3BhY2U6IHB3Z2VuLXdzCiAgICBwcmVmaXg6IERFVgogICAgdmFsdWVzOgogICAgICAtIHRhZz0ke0RST05FX0NPTU1JVF9SRUYjI3JlZnMvdGFncy99CiAgICAgIC0gc3RhZ2U9c3RhZ2UKICAgICAgLSBpbmdyZXNzLmhvc3RuYW1lPXB3Z2VuLXdzLXN0YWdlLnN0aW5ncmF5LmNvbQogICAgICAtIGRvY2tlcmNmZz0kJHtET0NLRVJDRkd9CiAgICBzZWNyZXRzOiBbIFNUQUdFX0FQSV9TRVJWRVIsIFNUQUdFX0tVQkVSTkVURVNfVE9LRU4sIFNUQUdFX0RPQ0tFUkNGRyBdCiAgICB1cGdyYWRlOiB0cnVlCiAgICB3YWl0OiB0cnVlCiAgICBkZWJ1ZzogdHJ1ZQogICAgd2hlbjoKICAgICAgZXZlbnQ6IHRhZwoKICBkZXBsb3lfdG9fazhzX3Byb2Q6CiAgICBpbWFnZTogcGdhdXRoaWVyMi9kcm9uZS1oZWxtOmsxLjkuMi1oMi43LjIKICAgIHNraXBfdGxzX3ZlcmlmeTogdHJ1ZQogICAgY2hhcnQ6IC4vY2hhcnRzL3B3Z2VuLXdzCiAgICByZWxlYXNlOiBwd2dlbi13cwogICAgbmFtZXNwYWNlOiBwd2dlbi13cwogICAgcHJlZml4OiBQUk9ECiAgICB2YWx1ZXM6CiAgICAgIC0gdGFnPSR7RFJPTkVfQ09NTUlUX1JFRiMjcmVmcy90YWdzL30KICAgICAgLSBzdGFnZT1wcm9kCiAgICAgIC0gaW5ncmVzcy5ob3N0bmFtZT1wd2dlbi13cy5zdGluZ3JheS5jb20KICAgICAgLSBkb2NrZXJjZmc9JCR7UFJPRF9ET0NLRVJDRkd9CiAgICBzZWNyZXRzOiBbIFBST0RfQVBJX1NFUlZFUiwgUFJPRF9LVUJFUk5FVEVTX1RPS0VOLCAgUFJPRF9ET0NLRVJDRkcgXQogICAgdXBncmFkZTogdHJ1ZQogICAgd2FpdDogdHJ1ZQogICAgZGVidWc6IGZhbHNlCiAgICB3aGVuOgogICAgICBldmVudDogZGVwbG95bWVudAogICAgICBlbnZpcm9ubWVudDogcHJvZA.ThGbA1zLKjS58wkT3634EPXRUhevUdZG2BS4zzbn7EQ